안녕하세요. c언어의 앙띠-코레아니쿠스입니다.  


 
 
Gidhub는 SVN과 함께 소스 형상관리 프로그램이라 합니다. 형상관리란, 돌아갈 시점, 복구해야할 시점들을 기록하고 관리하며, 해당 시점으로 다시 되돌릴 수 있다는 것을 의미합니다.
 


 
1. 백업과 형상관리 프로그램의 차이
 


 
백업은 선택된 시점을 현재 시점의 메모리에 덮어쓰기 때문에 데이터의 훼손이 일어난다.
 
형상관리 프로그램은 기록된 시점으로 되돌아간다.
 


 
2. 형상관리 프로그램은 개발 관리를 위해 사용한다
 


 
소스 형상관리 프로그램은 소스만 관리하는게 아니라 프로그래밍, 디자인, 기획 등 다양한 파트에서도 사용한다. 게임 뿐만 아니라 사무용으로도 사용할수 있다.
 


 
3. 형상관리 프로그램의 종류
 


 
SVN, CVS, GitHub, Microsoft Visual SourceSafe 등이 있다.
 


 
1) Microsoft Visual SourceSafe
 


 
체크아웃으로 작업을 시작하고 체크인으로 작업을 끝낸다.
 
한 명이 체크아웃 해버리면 그 파일은 다른 사람이 절대 건드릴 수 없다. → 공동 작업이 힘들다.
 
체크인을 해야 다른 사람이 해당 소스파일로 작업을 시작할 수 있다.
 


 
장점 - 현재 작업하는 파일이 최신버전이라는 것을 보장하기 때문에 충돌이 일어날 일은 없다.
 
단점 - 협업이 힙들다.
 


 
2) SVN
 


 
여러 사람이 한 파일로 동시에 작업할 수 있다.
 
단, 커밋을 이용해 현재 내 파일 버전을 하나 올려서 최신버전으로 만든다
 
이 경우 여러명이 같은 버전으로 커밋을 시도할 경우 충돌이 일어날 수 있다.
 
이 경우에는 파일 및 폴더에 노란 느낌표가 보이는데, 이를 해결하는 방법은 뒤에서 알아보도록 하자
 


 
3) GidHub
 


 
리눅스를 만든 사람이 만든 형상관리 프로그램
 
SVN과 많이 비슷하지만 SVN과는 달리 로컬에 따로 저장할 수 있다.
 
즉, 내 로컬 안에서도 관리를 할 수도 있고 리포지토리에 반영할 수도 있다. 두 가지 선택지가 있는 셈
 
SVN는 로컬에 커밋하면 잘못하면 날아갈 수 있는 데 비해, git은 로컬에서 따로 관리할 수 있어서 요즘 각광받는다.
 


 
4. 형상관리 프로그램이 쓰는 용어
 


 
업데이트(Update) : 현재 로컬 저장소를 가장 최신의 원격 저장소와 동기화하는 것.
 


 
커밋(Commit) : 일종의 업로드로, 현자 로컬 저장소의 상태를 원격으로 전송하는 것.
 


 
 
리비전(Revision) : 소스파일을 수정하여 커밋하면 일정한 규칙에 의해 숫자가 증가하는데, 이를 리비전이라 함.
 
SVN은 커밋함에 따라 파일 별로 리비전이 매겨지지 않고, 전체에 리비전이 매겨진다.
 
리비전을 보면 프로젝트의 진행 상황을 알 수 있다.
 


 
리포지토리(Repository) : 정보 시스템의 프로그램이나 데이터 같은 각종 자원을 자원간의 관련까지 포함하여 관리하는 곳.
 


 
도움이 되었으면 좋겠습니다.